var global=this;function onOpen(){}function onEdit(){}function setupTrigger(){}function refreshSheet(){}function calculateUStVA(){}function calculateBWA(){}function calculateBilanz(){}function importDriveFiles(){}!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";var e={common:{paymentType:["Überweisung","Bar","Kreditkarte","Paypal","Lastschrift"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],currentYear:(new Date).getFullYear(),version:"1.0.0"},tax:{defaultMwst:19,allowedMwst:[0,7,19],stammkapital:25e3,year:2021,isHolding:!1,holding:{gewerbesteuer:470,koerperschaftsteuer:15,solidaritaetszuschlag:5.5,gewinnUebertragSteuerfrei:95,gewinnUebertragSteuerpflichtig:5},operative:{gewerbesteuer:470,koerperschaftsteuer:15,solidaritaetszuschlag:5.5,gewinnUebertragSteuerfrei:0,gewinnUebertragSteuerpflichtig:100}},sheets:{einnahmen:{columns:{datum:1,rechnungsnummer:2,kategorie:3,kunde:4,nettobetrag:5,mwstSatz:6,mwstBetrag:7,bruttoBetrag:8,bezahlt:9,steuerbemessung:10,quartal:11,zahlungsstatus:12,zahlungsart:13,zahlungsdatum:14,bankAbgleich:15,zeitstempel:16,dateiname:17,dateilink:18}},ausgaben:{columns:{datum:1,rechnungsnummer:2,kategorie:3,kunde:4,nettobetrag:5,mwstSatz:6,mwstBetrag:7,bruttoBetrag:8,bezahlt:9,steuerbemessung:10,quartal:11,zahlungsstatus:12,zahlungsart:13,zahlungsdatum:14,bankAbgleich:15,zeitstempel:16,dateiname:17,dateilink:18}},eigenbelege:{columns:{datum:1,belegnummer:2,kategorie:3,beschreibung:4,nettobetrag:5,mwstSatz:6,mwstBetrag:7,bruttoBetrag:8,bezahlt:9,steuerbemessung:10,quartal:11,status:12,zahlungsart:13,zahlungsdatum:14,zeitstempel:16,dateiname:17,dateilink:18}},bankbewegungen:{columns:{datum:1,buchungstext:2,betrag:3,saldo:4,transaktionstyp:5,kategorie:6,kontoSoll:7,kontoHaben:8,referenz:9,verwendungszweck:10,matchInfo:11,anmerkung:12}},gesellschafterkonto:{columns:{datum:1,beschreibung:2,kategorie:3,betrag:4,gesellschafter:5,anmerkung:6,kontoSoll:7,kontoHaben:8,buchungsdatum:9,beleg:10,saldo:11,zeitstempel:12}},holdingTransfers:{columns:{datum:1,beschreibung:2,kategorie:3,betrag:4,anmerkung:5,zeitstempel:6}},aenderungshistorie:{columns:{datum:1,typ:2,dateiname:3,dateilink:4}}},einnahmen:{categories:{"Erlöse aus Lieferungen und Leistungen":{taxType:"steuerpflichtig"},"Provisionserlöse":{taxType:"steuerpflichtig"},"Sonstige betriebliche Erträge":{taxType:"steuerpflichtig"},"Erträge aus Vermietung/Verpachtung":{taxType:"steuerfrei_inland"},"Erträge aus Zuschüssen":{taxType:"steuerpflichtig"},"Erträge aus Währungsgewinnen":{taxType:"steuerpflichtig"},"Erträge aus Anlagenabgängen":{taxType:"steuerpflichtig"},Darlehen:{taxType:"steuerfrei_inland"},Zinsen:{taxType:"steuerfrei_inland"},Gewinnvortrag:{taxType:"steuerfrei_inland"},Verlustvortrag:{taxType:"steuerfrei_inland"}},kontoMapping:{"Erlöse aus Lieferungen und Leistungen":{soll:"1200",gegen:"4400",mwst:"1776"},"Provisionserlöse":{soll:"1200",gegen:"4120",mwst:"1776"},"Sonstige betriebliche Erträge":{soll:"1200",gegen:"4830",mwst:"1776"},"Erträge aus Vermietung/Verpachtung":{soll:"1200",gegen:"4180"},"Erträge aus Zuschüssen":{soll:"1200",gegen:"4190",mwst:"1776"},"Erträge aus Währungsgewinnen":{soll:"1200",gegen:"4840"},"Erträge aus Anlagenabgängen":{soll:"1200",gegen:"4855"},Darlehen:{soll:"1200",gegen:"3100"},Zinsen:{soll:"1200",gegen:"4130"},Gewinnvortrag:{soll:"1200",gegen:"2970"},Verlustvortrag:{soll:"1200",gegen:"2978"}},bwaMapping:{"Erlöse aus Lieferungen und Leistungen":"umsatzerloese","Provisionserlöse":"provisionserloese","Sonstige betriebliche Erträge":"sonstigeErtraege","Erträge aus Vermietung/Verpachtung":"vermietung","Erträge aus Zuschüssen":"zuschuesse","Erträge aus Währungsgewinnen":"waehrungsgewinne","Erträge aus Anlagenabgängen":"anlagenabgaenge",Darlehen:"sonstigeErtraege",Zinsen:"sonstigeErtraege"}},ausgaben:{categories:{Wareneinsatz:{taxType:"steuerpflichtig",group:"material"},"Bezogene Leistungen":{taxType:"steuerpflichtig",group:"material"},"Roh-, Hilfs- & Betriebsstoffe":{taxType:"steuerpflichtig",group:"material"},"Bruttolöhne & Gehälter":{taxType:"steuerfrei_inland",group:"personal"},"Soziale Abgaben & Arbeitgeberanteile":{taxType:"steuerfrei_inland",group:"personal"},"Sonstige Personalkosten":{taxType:"steuerpflichtig",group:"personal"},Miete:{taxType:"steuerfrei_inland",group:"raum"},Nebenkosten:{taxType:"steuerpflichtig",group:"raum"},Betriebskosten:{taxType:"steuerpflichtig",group:"betrieb"},"Marketing & Werbung":{taxType:"steuerpflichtig",group:"betrieb"},Reisekosten:{taxType:"steuerpflichtig",group:"betrieb"},Versicherungen:{taxType:"steuerfrei_inland",group:"betrieb"},Porto:{taxType:"steuerfrei_inland",group:"betrieb"},"Google Ads":{taxType:"steuerfrei_ausland",group:"betrieb"},AWS:{taxType:"steuerfrei_ausland",group:"betrieb"},"Facebook Ads":{taxType:"steuerfrei_ausland",group:"betrieb"},Bewirtung:{taxType:"steuerpflichtig",group:"betrieb",besonderheit:"bewirtung"},"Telefon & Internet":{taxType:"steuerpflichtig",group:"betrieb"},"Bürokosten":{taxType:"steuerpflichtig",group:"betrieb"},Fortbildungskosten:{taxType:"steuerpflichtig",group:"betrieb"},"Abschreibungen Maschinen":{taxType:"steuerpflichtig",group:"abschreibung"},"Abschreibungen Büroausstattung":{taxType:"steuerpflichtig",group:"abschreibung"},"Abschreibungen immaterielle Wirtschaftsgüter":{taxType:"steuerpflichtig",group:"abschreibung"},"Zinsen auf Bankdarlehen":{taxType:"steuerpflichtig",group:"zinsen"},"Zinsen auf Gesellschafterdarlehen":{taxType:"steuerpflichtig",group:"zinsen"},Leasingkosten:{taxType:"steuerpflichtig",group:"abschreibung"},"Gewerbesteuerrückstellungen":{taxType:"steuerfrei_inland",group:"steuer"},"Körperschaftsteuer":{taxType:"steuerfrei_inland",group:"steuer"},"Solidaritätszuschlag":{taxType:"steuerfrei_inland",group:"steuer"},"Sonstige Steuerrückstellungen":{taxType:"steuerfrei_inland",group:"steuer"},"Sonstige betriebliche Aufwendungen":{taxType:"steuerpflichtig",group:"sonstige"}},kontoMapping:{Wareneinsatz:{soll:"5000",gegen:"1200",vorsteuer:"1576"},"Bezogene Leistungen":{soll:"5300",gegen:"1200",vorsteuer:"1576"},"Roh-, Hilfs- & Betriebsstoffe":{soll:"5400",gegen:"1200",vorsteuer:"1576"},"Bruttolöhne & Gehälter":{soll:"6000",gegen:"1200"},"Soziale Abgaben & Arbeitgeberanteile":{soll:"6010",gegen:"1200"},"Sonstige Personalkosten":{soll:"6020",gegen:"1200",vorsteuer:"1576"},Miete:{soll:"6310",gegen:"1200"},Nebenkosten:{soll:"6320",gegen:"1200",vorsteuer:"1576"},Betriebskosten:{soll:"6300",gegen:"1200",vorsteuer:"1576"},"Marketing & Werbung":{soll:"6600",gegen:"1200",vorsteuer:"1576"},Reisekosten:{soll:"6650",gegen:"1200",vorsteuer:"1576"},Versicherungen:{soll:"6400",gegen:"1200"},Porto:{soll:"6810",gegen:"1200"},"Google Ads":{soll:"6600",gegen:"1200"},AWS:{soll:"6500",gegen:"1200"},"Facebook Ads":{soll:"6600",gegen:"1200"},Bewirtung:{soll:"6670",gegen:"1200",vorsteuer:"1576"},"Telefon & Internet":{soll:"6805",gegen:"1200",vorsteuer:"1576"},"Bürokosten":{soll:"6815",gegen:"1200",vorsteuer:"1576"},Fortbildungskosten:{soll:"6830",gegen:"1200",vorsteuer:"1576"},"Abschreibungen Maschinen":{soll:"6200",gegen:"1200"},"Abschreibungen Büroausstattung":{soll:"6210",gegen:"1200"},"Abschreibungen immaterielle Wirtschaftsgüter":{soll:"6220",gegen:"1200"},"Zinsen auf Bankdarlehen":{soll:"7300",gegen:"1200"},"Zinsen auf Gesellschafterdarlehen":{soll:"7310",gegen:"1200"},Leasingkosten:{soll:"6240",gegen:"1200",vorsteuer:"1576"},"Gewerbesteuerrückstellungen":{soll:"7610",gegen:"1200"},"Körperschaftsteuer":{soll:"7600",gegen:"1200"},"Solidaritätszuschlag":{soll:"7620",gegen:"1200"},"Sonstige Steuerrückstellungen":{soll:"7630",gegen:"1200"},"Sonstige betriebliche Aufwendungen":{soll:"6800",gegen:"1200",vorsteuer:"1576"}},bwaMapping:{Wareneinsatz:"wareneinsatz","Bezogene Leistungen":"fremdleistungen","Roh-, Hilfs- & Betriebsstoffe":"rohHilfsBetriebsstoffe",Betriebskosten:"sonstigeAufwendungen","Marketing & Werbung":"werbungMarketing",Reisekosten:"reisekosten","Bruttolöhne & Gehälter":"bruttoLoehne","Soziale Abgaben & Arbeitgeberanteile":"sozialeAbgaben","Sonstige Personalkosten":"sonstigePersonalkosten","Sonstige betriebliche Aufwendungen":"sonstigeAufwendungen",Miete:"mieteNebenkosten",Nebenkosten:"mieteNebenkosten",Versicherungen:"versicherungen",Porto:"buerokosten","Telefon & Internet":"telefonInternet","Bürokosten":"buerokosten",Fortbildungskosten:"fortbildungskosten","Abschreibungen Maschinen":"abschreibungenMaschinen","Abschreibungen Büroausstattung":"abschreibungenBueromaterial","Abschreibungen immaterielle Wirtschaftsgüter":"abschreibungenImmateriell","Zinsen auf Bankdarlehen":"zinsenBank","Zinsen auf Gesellschafterdarlehen":"zinsenGesellschafter",Leasingkosten:"leasingkosten","Google Ads":"werbungMarketing",AWS:"sonstigeAufwendungen","Facebook Ads":"werbungMarketing",Bewirtung:"sonstigeAufwendungen","Gewerbesteuerrückstellungen":"gewerbesteuerRueckstellungen","Körperschaftsteuer":"koerperschaftsteuer","Solidaritätszuschlag":"solidaritaetszuschlag","Sonstige Steuerrückstellungen":"steuerrueckstellungen"}},bank:{type:["Einnahme","Ausgabe","Interne Buchung"],defaultAccount:"1200"},gesellschafterkonto:{category:["Gesellschafterdarlehen","Ausschüttungen","Kapitalrückführung","Privatentnahme","Privateinlage"],shareholder:["Christopher Giebel","Hendrik Werner"]},eigenbelege:{category:["Kleidung","Trinkgeld","Private Vorauslage","Bürokosten","Reisekosten","Bewirtung","Sonstiges"],mapping:{Kleidung:{taxType:"steuerpflichtig"},Trinkgeld:{taxType:"steuerfrei"},"Private Vorauslage":{taxType:"steuerfrei"},"Bürokosten":{taxType:"steuerpflichtig"},Reisekosten:{taxType:"steuerpflichtig"},Bewirtung:{taxType:"eigenbeleg",besonderheit:"bewirtung"},Sonstiges:{taxType:"steuerpflichtig"}},status:["Offen","Erstattet","Gebucht"]},holdingTransfers:{category:["Gewinnübertrag","Kapitalrückführung"]},kontenplan:{"0000":"Eröffnungsbilanz","0100":"Immaterielle Vermögensgegenstände","0400":"Grundstücke ohne Bauten","0500":"Bauten auf eigenen Grundstücken","0650":"Technische Anlagen und Maschinen","0700":"Andere Anlagen, Betriebs- und Geschäftsausstattung",1200:"Bank",1210:"Kasse",1300:"Forderungen aus Lieferungen und Leistungen",1576:"Vorsteuer 19%",1577:"Vorsteuer 7%",1590:"Umsatzsteuer-Vorauszahlungen",1600:"Forderungen gegen Gesellschafter",1776:"Umsatzsteuer 19%",1777:"Umsatzsteuer 7%",1790:"Umsatzsteuer-Vorauszahlungen",2e3:"Gezeichnetes Kapital",2100:"Kapitalrücklage",2970:"Gewinnvortrag vor Verwendung",2978:"Verlustvortrag vor Verwendung",3100:"Darlehen",3150:"Verbindlichkeiten gegenüber Kreditinstituten",3200:"Verbindlichkeiten aus Lieferungen und Leistungen",3300:"Verbindlichkeiten gegenüber Gesellschaftern",4e3:"Umsatzerlöse",4120:"Provisionserlöse",4130:"Zinsertrag",4180:"Erträge aus Vermietung und Verpachtung",4190:"Erträge aus Zuschüssen und Zulagen",4400:"Erlöse aus Lieferungen und Leistungen",4830:"Sonstige betriebliche Erträge",4840:"Erträge aus Währungsumrechnung",4855:"Erträge aus Anlagenabgang",5e3:"Wareneinsatz",5300:"Bezogene Leistungen",5400:"Roh-, Hilfs- und Betriebsstoffe",6e3:"Löhne und Gehälter",6010:"Gesetzliche soziale Aufwendungen",6020:"Sonstige Personalkosten",6200:"Abschreibungen auf Sachanlagen",6210:"Abschreibungen auf Büroausstattung",6220:"Abschreibungen auf immaterielle Vermögensgegenstände",6240:"Leasingkosten",6300:"Betriebskosten",6310:"Miete",6320:"Nebenkosten",6400:"Versicherungen",6500:"IT-Kosten",6600:"Werbekosten",6650:"Reisekosten",6670:"Bewirtungskosten",6800:"Sonstige betriebliche Aufwendungen",6805:"Telefon und Internet",6810:"Porto",6815:"Bürobedarf",6830:"Fortbildungskosten",7300:"Zinsaufwendungen für Bankdarlehen",7310:"Zinsaufwendungen für Gesellschafterdarlehen",7600:"Körperschaftsteuer",7610:"Gewerbesteuer",7620:"Solidaritätszuschlag",7630:"Sonstige Steuern",8e3:"Eröffnungsbilanzkonto",8400:"Abschlussbilanzkonto",8999:"Gewinn- und Verlustkonto"},initialize(){return this.bank.category=[...Object.keys(this.einnahmen.categories),...Object.keys(this.ausgaben.categories),...this.gesellschafterkonto.category,...this.holdingTransfers.category,...this.eigenbelege.category],this.bank.category=[...new Set(this.bank.category)],this}}.initialize();const t={_cache:{dates:new Map,currency:new Map,mwstRates:new Map,columnLetters:new Map},clearCache(){this._cache.dates.clear(),this._cache.currency.clear(),this._cache.mwstRates.clear(),this._cache.columnLetters.clear()},parseDate(e){const t=e instanceof Date?e.getTime().toString():e?e.toString():"";if(this._cache.dates.has(t))return this._cache.dates.get(t);let n=null;if(e instanceof Date)n=isNaN(e.getTime())?null:e;else if("string"==typeof e)if(/^\d{1,2}\.\d{1,2}\.\d{4}$/.test(e)){const[t,r,s]=e.split(".").map(Number),a=new Date(s,r-1,t);n=isNaN(a.getTime())?null:a}else{const t=new Date(e);n=isNaN(t.getTime())?null:t}return this._cache.dates.set(t,n),n},parseCurrency(e){if(null==e||""===e)return 0;if("number"==typeof e)return e;const t=e.toString();if(this._cache.currency.has(t))return this._cache.currency.get(t);const n=t.replace(/[^\d,.-]/g,"").replace(/,/g,"."),r=n.split(".");let s;if(r.length>2){const e=r.pop();s=parseFloat(r.join("")+"."+e)}else s=parseFloat(n);return s=isNaN(s)?0:s,this._cache.currency.set(t,s),s},parseMwstRate(t){const n=e?.tax?.defaultMwst||19;if(null==t||""===t)return n;const r=t.toString();if(this._cache.mwstRates.has(r))return this._cache.mwstRates.get(r);let s;if("number"==typeof t)s=t<1?100*t:t;else{const e=t.toString().replace(/%/g,"").replace(/,/g,".").trim(),r=parseFloat(e);s=isNaN(r)?n:r<1?100*r:r}return this._cache.mwstRates.set(r,s),s},getFolderByName(e,t){if(!e)return null;try{const n=e.getFoldersByName(t);return n.hasNext()?n.next():null}catch(e){return console.error("Fehler beim Suchen des Ordners:",e),null}},extractDateFromFilename(e){if(!e)return"";if(this._cache.dates.has(`filename_${e}`))return this._cache.dates.get(`filename_${e}`);const t=e.replace(/\.[^/.]+$/,"");let n="",r=t.match(/(\d{2}[.]\d{2}[.]\d{4})/);if(r?.[1])n=r[1];else if(r=t.match(/[^0-9](\d{4}[-_.\/]\d{2}[-_.\/]\d{2})[^0-9]/),r?.[1]){const e=r[1].split(/[-_.\/]/);if(3===e.length){const[t,r,s]=e;n=`${s}.${r}.${t}`}}else if(r=t.match(/(^|[^0-9])(\d{4}[-_.\/]\d{2}[-_.\/]\d{2})($|[^0-9])/),r?.[2]){const e=r[2].split(/[-_.\/]/);if(3===e.length){const[t,r,s]=e;n=`${s}.${r}.${t}`}}else if(r=t.match(/(\d{2})[-_.\/](\d{2})[-_.\/](\d{4})/),r){const[e,t,s,a]=r;n=`${t}.${s}.${a}`}return this._cache.dates.set(`filename_${e}`,n),n},setConditionalFormattingForColumn(e,t,n){if(e&&t&&n&&n.length)try{const r=Math.max(e.getLastRow(),2),s=e.getRange(`${t}2:${t}${r}`),a=e.getConditionalFormatRules().filter((e=>!e.getRanges().some((e=>e.getColumn()===s.getColumn()&&e.getRow()===s.getRow()&&e.getNumColumns()===s.getNumColumns())))),i=n.map((({value:e,background:t,fontColor:n,pattern:r})=>{let a;return a="beginsWith"===r?SpreadsheetApp.newConditionalFormatRule().whenTextStartsWith(e):"contains"===r?SpreadsheetApp.newConditionalFormatRule().whenTextContains(e):SpreadsheetApp.newConditionalFormatRule().whenTextEqualTo(e),a.setBackground(t||"#ffffff").setFontColor(n||"#000000").setRanges([s]).build()}));e.setConditionalFormatRules([...a,...i])}catch(e){console.error("Fehler beim Setzen der bedingten Formatierung:",e)}},getMonthFromRow(t,n=null){if(!t)return 0;let r;if(n){const t=e.sheets[n.toLowerCase()]?.columns;r=t&&t.zeitstempel?t.zeitstempel-1:15}else r=13;if(t.length<=r)return 0;const s=this.parseDate(t[r]),a=e?.tax?.year||(new Date).getFullYear();return s&&s.getFullYear()===a?s.getMonth()+1:0},formatDate(e){const t=this.parseDate(e);if(!t)return"";return`${String(t.getDate()).padStart(2,"0")}.${String(t.getMonth()+1).padStart(2,"0")}.${t.getFullYear()}`},formatCurrency(e,t="€"){return this.parseCurrency(e).toLocaleString("de-DE",{minimumFractionDigits:2,maximumFractionDigits:2})+" "+t},generateUniqueId:(e="")=>`${e}${(new Date).getTime()}${Math.floor(1e4*Math.random())}`,getColumnLetter(e){if(this._cache.columnLetters.has(e))return this._cache.columnLetters.get(e);let t="",n=e;for(;n>0;){const e=(n-1)%26;t=String.fromCharCode(65+e)+t,n=Math.floor((n-e)/26)}return this._cache.columnLetters.set(e,t),t},isApproximatelyEqual:(e,t,n=.01)=>Math.abs(e-t)<=n,round(e,t=2){const n=Math.pow(10,t);return Math.round((e+Number.EPSILON)*n)/n},isEmpty:e=>null==e||""===e.toString().trim(),normalizeText:e=>e?e.toString().toLowerCase().replace(/[äöüß]/g,(e=>({"ä":"ae","ö":"oe","ü":"ue","ß":"ss"}[e]))).replace(/[^a-z0-9]/g,""):"",batchWriteToSheet(e,t,n,r){if(e&&t&&t.length&&t[0].length)try{e.getRange(n,r,t.length,t[0].length).setValues(t)}catch(s){console.error("Fehler beim Batch-Schreiben in das Sheet:",s);const a=50;for(let s=0;s<t.length;s+=a){const i=t.slice(s,s+a);try{e.getRange(n+s,r,i.length,i[0].length).setValues(i),s+a<t.length&&Utilities.sleep(100)}catch(e){console.error(`Fehler beim Schreiben von Batch ${s/a}:`,e)}}}}},n=(()=>{const n=(e,n)=>{if(!e)return null;try{let r=t.getFolderByName(e,n);if(!r){const t=SpreadsheetApp.getUi();t.alert(`Der Ordner '${n}' existiert nicht. Soll er erstellt werden?`,t.ButtonSet.YES_NO)===t.Button.YES&&(r=e.createFolder(n))}return r}catch(e){return console.error(`Fehler beim Finden/Erstellen des Ordners ${n}:`,e),null}},r=(n,r,s,a,i)=>{if(!n||!r||!a)return 0;const l=n.getFiles(),g=[],u=[],o=new Date;let h=0;const c="Einnahme"===s?e.sheets.einnahmen.columns:e.sheets.ausgaben.columns,b=e.sheets.aenderungshistorie.columns;let m=0,d=[];for(;l.hasNext();){const e=l.next(),n=e.getName().replace(/\.[^/.]+$/,"");if(!i.has(n)){const f=n.replace(/^[^ ]* /,""),p=t.extractDateFromFilename(n),k=e.getUrl(),w=Array(r.getLastColumn()).fill("");w[c.datum-1]=p,w[c.rechnungsnummer-1]=f,w[c.zeitstempel-1]=o,w[c.dateiname-1]=n,w[c.dateilink-1]=k,g.push(w);const S=Array(a.getLastColumn()).fill("");S[b.datum-1]=o,S[b.typ-1]=s,S[b.dateiname-1]=n,S[b.dateilink-1]=k,u.push(S),i.add(n),h++,m++,d.push(e),m%20!=0&&l.hasNext()||(d=[],Utilities.sleep(50))}}return g.length>0&&t.batchWriteToSheet(r,g,r.getLastRow()+1,1),u.length>0&&t.batchWriteToSheet(a,u,a.getLastRow()+1,1),h};return{importDriveFiles:()=>{const t=SpreadsheetApp.getActiveSpreadsheet(),s=SpreadsheetApp.getUi();let a=0;try{const i=t.getSheetByName("Einnahmen"),l=t.getSheetByName("Ausgaben");if(!i||!l)return s.alert("Fehler: Die Sheets 'Einnahmen' oder 'Ausgaben' existieren nicht!"),0;const g=t.getSheetByName("Änderungshistorie")||t.insertSheet("Änderungshistorie");if(!(t=>{try{if(0===t.getLastRow()){const n=e.sheets.aenderungshistorie.columns,r=Array(t.getLastColumn()).fill("");r[n.datum-1]="Datum",r[n.typ-1]="Rechnungstyp",r[n.dateiname-1]="Dateiname",r[n.dateilink-1]="Link zur Datei",t.appendRow(r),t.getRange(1,1,1,4).setFontWeight("bold")}return!0}catch(e){return console.error("Fehler bei der Initialisierung des History-Sheets:",e),!1}})(g))return s.alert("Fehler: Die Änderungshistorie konnte nicht initialisiert werden!"),0;const u=(t=>{const n=new Set;try{const r=t.getDataRange().getValues(),s=e.sheets.aenderungshistorie.columns;for(let e=1;e<r.length;e++){const t=r[e][s.dateiname-1];t&&n.add(t)}}catch(e){console.error("Fehler beim Sammeln bereits importierter Dateien:",e)}return n})(g),o=(()=>{try{const e=SpreadsheetApp.getActiveSpreadsheet(),t=DriveApp.getFileById(e.getId()).getParents();return t.hasNext()?t.next():null}catch(e){return console.error("Fehler beim Abrufen des übergeordneten Ordners:",e),null}})();if(!o)return s.alert("Fehler: Kein übergeordneter Ordner gefunden."),0;const h=n(o,"Einnahmen"),c=n(o,"Ausgaben");let b=0,m=0;if(h)try{b=r(h,i,"Einnahme",g,u),a+=b}catch(e){console.error("Fehler beim Import der Einnahmen:",e),s.alert("Fehler beim Import der Einnahmen: "+e.toString())}if(c)try{m=r(c,l,"Ausgabe",g,u),a+=m}catch(e){console.error("Fehler beim Import der Ausgaben:",e),s.alert("Fehler beim Import der Ausgaben: "+e.toString())}return 0===a?s.alert("Es wurden keine neuen Dateien gefunden."):s.alert(`Import abgeschlossen.\n\n${b} Einnahmen importiert.\n${m} Ausgaben importiert.`),a}catch(e){return console.error("Unerwarteter Fehler beim Import:",e),s.alert("Ein unerwarteter Fehler ist aufgetreten: "+e.toString()),0}}}})(),r=(()=>{const n=(n,s,a="einnahmen")=>{const i=[],l=e.sheets[a].columns,g=[{check:e=>t.isEmpty(e[l.datum-1]),message:"Rechnungsdatum fehlt."},{check:e=>t.isEmpty(e[l.rechnungsnummer-1]),message:"Rechnungsnummer fehlt."},{check:e=>t.isEmpty(e[l.kategorie-1]),message:"Kategorie fehlt."},{check:e=>t.isEmpty(e[l.kunde-1]),message:"Kunde/Lieferant fehlt."},{check:e=>r(e[l.nettobetrag-1]),message:"Nettobetrag fehlt oder ungültig."},{check:n=>{const r=null==n[l.mwstSatz-1]?"":n[l.mwstSatz-1].toString().trim();if(t.isEmpty(r))return!1;const s=t.parseMwstRate(r);if(isNaN(s))return!0;return!(e?.tax?.allowedMwst||[0,7,19]).includes(Math.round(s))},message:`Ungültiger MwSt-Satz. Erlaubt sind: ${e?.tax?.allowedMwst?.join("%, ")}% oder leer.`}],u=n[l.zahlungsstatus-1]?n[l.zahlungsstatus-1].toString().trim().toLowerCase():"";return((e,t,n)=>{n.forEach((({check:n,message:r})=>{n(e)&&i.push(`Zeile ${t}: ${r}`)}))})(n,s,[...g,..."offen"===u?[{check:e=>!t.isEmpty(e[l.zahlungsart-1]),message:"Zahlungsart darf bei offener Zahlung nicht gesetzt sein."},{check:e=>!t.isEmpty(e[l.zahlungsdatum-1]),message:"Zahlungsdatum darf bei offener Zahlung nicht gesetzt sein."}]:[{check:e=>t.isEmpty(e[l.zahlungsart-1]),message:"Zahlungsart muss bei bezahlter/teilbezahlter Zahlung gesetzt sein."},{check:e=>t.isEmpty(e[l.zahlungsdatum-1]),message:"Zahlungsdatum muss bei bezahlter/teilbezahlter Zahlung gesetzt sein."},{check:e=>{if(t.isEmpty(e[l.zahlungsdatum-1]))return!1;const n=t.parseDate(e[l.zahlungsdatum-1]);return!!n&&n>new Date},message:"Zahlungsdatum darf nicht in der Zukunft liegen."},{check:e=>{if(t.isEmpty(e[l.zahlungsdatum-1])||t.isEmpty(e[l.datum-1]))return!1;const n=t.parseDate(e[l.zahlungsdatum-1]),r=t.parseDate(e[l.datum-1]);return!(!n||!r)&&n<r},message:"Zahlungsdatum darf nicht vor dem Rechnungsdatum liegen."}]]),i},r=e=>t.isEmpty(e)||isNaN(parseFloat(e.toString().trim())),s=n=>{if(!n)return["Bankbewegungen-Sheet nicht gefunden"];const s=n.getDataRange().getValues(),a=[],i=e.sheets.bankbewegungen.columns,l=[{check:e=>t.isEmpty(e[i.datum-1]),message:"Buchungsdatum fehlt."},{check:e=>t.isEmpty(e[i.buchungstext-1]),message:"Buchungstext fehlt."},{check:e=>!t.isEmpty(e[i.betrag-1])&&!isNaN(parseFloat(e[i.betrag-1].toString().trim())),message:"Betrag darf nicht gesetzt sein."},{check:e=>t.isEmpty(e[i.saldo-1])||r(e[i.saldo-1]),message:"Saldo fehlt oder ungültig."},{check:e=>!t.isEmpty(e[i.transaktionstyp-1]),message:"Typ darf nicht gesetzt sein."},{check:e=>!t.isEmpty(e[i.kategorie-1]),message:"Kategorie darf nicht gesetzt sein."},{check:e=>!t.isEmpty(e[i.kontoSoll-1]),message:"Konto (Soll) darf nicht gesetzt sein."},{check:e=>!t.isEmpty(e[i.kontoHaben-1]),message:"Gegenkonto (Haben) darf nicht gesetzt sein."}],g=[{check:e=>t.isEmpty(e[i.datum-1]),message:"Buchungsdatum fehlt."},{check:e=>t.isEmpty(e[i.buchungstext-1]),message:"Buchungstext fehlt."},{check:e=>t.isEmpty(e[i.betrag-1])||r(e[i.betrag-1]),message:"Betrag fehlt oder ungültig."},{check:e=>t.isEmpty(e[i.saldo-1])||r(e[i.saldo-1]),message:"Saldo fehlt oder ungültig."},{check:e=>t.isEmpty(e[i.transaktionstyp-1]),message:"Typ fehlt."},{check:e=>t.isEmpty(e[i.kategorie-1]),message:"Kategorie fehlt."},{check:e=>t.isEmpty(e[i.kontoSoll-1]),message:"Konto (Soll) fehlt."},{check:e=>t.isEmpty(e[i.kontoHaben-1]),message:"Gegenkonto (Haben) fehlt."}],u=(e,t,n)=>{n.forEach((({check:n,message:r})=>{n(e)&&a.push(`Zeile ${t}: ${r}`)}))};return s.forEach(((e,t)=>{const n=t+1;0===t||t===s.length-1?u(e,n,l):t>0&&t<s.length-1&&u(e,n,g)})),a},a=(e,t)=>e.reduce(((e,r,s)=>{if(r.some((e=>""!==e))){const a=n(r,s+2,t);e.push(...a)}return e}),[]),i=(n,r)=>{switch(r.toLowerCase()){case"date":const r=t.parseDate(n);return{isValid:!!r,message:r?"":"Ungültiges Datumsformat. Bitte verwenden Sie DD.MM.YYYY."};case"number":const s=parseFloat(n);return{isValid:!isNaN(s),message:isNaN(s)?"Ungültige Zahl.":""};case"currency":const a=t.parseCurrency(n);return{isValid:!isNaN(a),message:isNaN(a)?"Ungültiger Geldbetrag.":""};case"mwst":const i=t.parseMwstRate(n),l=e?.tax?.allowedMwst||[0,7,19];return{isValid:l.includes(Math.round(i)),message:l.includes(Math.round(i))?"":`Ungültiger MwSt-Satz. Erlaubt sind: ${l.join("%, ")}%.`};case"text":return{isValid:!t.isEmpty(n),message:t.isEmpty(n)?"Text darf nicht leer sein.":""};default:return{isValid:!0,message:""}}},l=(e,t)=>{e.errors.push(t),e.errorsByRow[t.row]||(e.errorsByRow[t.row]=[]),e.errorsByRow[t.row].push(t),e.errorsByColumn[t.column]||(e.errorsByColumn[t.column]=[]),e.errorsByColumn[t.column].push(t)};return{validateDropdown:(e,t,n,r,s,a)=>{if(!e||!a||!a.length)return null;try{return e.getRange(t,n,r,s).setDataValidation(SpreadsheetApp.newDataValidation().requireValueInList(a,!0).setAllowInvalid(!1).build())}catch(e){return console.error("Fehler beim Erstellen der Dropdown-Validierung:",e),null}},validateRevenueAndExpenses:n,validateBanking:s,validateAllSheets:(e,t,n=null)=>{if(!e||!t)return SpreadsheetApp.getUi().alert("Fehler: Benötigte Sheets nicht gefunden!"),!1;try{const r=[];if(e.getLastRow()>1){const t=e.getDataRange().getValues().slice(1),n=a(t,"einnahmen");n.length&&r.push("Fehler in 'Einnahmen':\n"+n.join("\n"))}if(t.getLastRow()>1){const e=t.getDataRange().getValues().slice(1),n=a(e,"ausgaben");n.length&&r.push("Fehler in 'Ausgaben':\n"+n.join("\n"))}if(n){const e=s(n);e.length&&r.push("Fehler in 'Bankbewegungen':\n"+e.join("\n"))}if(r.length){const e=SpreadsheetApp.getUi(),t=1500;let n=r.join("\n\n");return n.length>t&&(n=n.substring(0,t)+"\n\n... und weitere Fehler. Bitte beheben Sie die angezeigten Fehler zuerst."),e.alert("Validierungsfehler gefunden",n,e.ButtonSet.OK),!1}return!0}catch(e){return console.error("Fehler bei der Validierung:",e),SpreadsheetApp.getUi().alert("Ein Fehler ist bei der Validierung aufgetreten: "+e.toString()),!1}},validateCellValue:i,validateSheetWithRules:(e,n)=>{const r={isValid:!0,errors:[],errorsByRow:{},errorsByColumn:{}};if(!e)return r.isValid=!1,r.errors.push("Sheet nicht gefunden"),r;const s=e.getDataRange().getValues();if(s.length<=1)return r;for(let e=1;e<s.length;e++){const a=s[e];Object.entries(n).forEach((([n,s])=>{const g=parseInt(n,10);if(isNaN(g)||g>=a.length)return;const u=a[g],{type:o,required:h}=s;if(h&&t.isEmpty(u)){l(r,{row:e+1,column:g+1,message:"Pflichtfeld nicht ausgefüllt"})}else if(!t.isEmpty(u)&&o){const t=i(u,o);if(!t.isValid){const n={row:e+1,column:g+1,message:t.message};l(r,n)}}}))}return r.isValid=0===r.errors.length,r},isEmpty:t.isEmpty,isInvalidNumber:r}})(),s=(()=>{const n={sheets:new Map,references:{einnahmen:null,ausgaben:null}},s=()=>{n.sheets.clear(),n.references.einnahmen=null,n.references.ausgaben=null},a=e=>{if(n.sheets.has(e))return n.sheets.get(e);const t=SpreadsheetApp.getActiveSpreadsheet().getSheetByName(e);return t&&n.sheets.set(e,t),t},i=n=>{try{const r=n.getLastRow();if(r<2)return!0;const s=r-1,a=n.getName();let i;if("Einnahmen"===a)i=e.sheets.einnahmen.columns;else if("Ausgaben"===a)i=e.sheets.ausgaben.columns;else{if("Eigenbelege"!==a)return!1;i=e.sheets.eigenbelege.columns}const g={};Object.entries(i).forEach((([e,n])=>{g[e]=t.getColumnLetter(n)}));const u={};u[i.mwstBetrag]=Array.from({length:s},((e,t)=>[`=${g.nettobetrag}${t+2}*${g.mwstSatz}${t+2}`])),u[i.bruttoBetrag]=Array.from({length:s},((e,t)=>[`=${g.nettobetrag}${t+2}+${g.mwstBetrag}${t+2}`])),u[i.steuerbemessung]=Array.from({length:s},((e,t)=>[`=(${g.bruttoBetrag}${t+2}-${g.bezahlt}${t+2})/(1+${g.mwstSatz}${t+2})`])),u[i.quartal]=Array.from({length:s},((e,t)=>[`=IF(${g.datum}${t+2}="";"";ROUNDUP(MONTH(${g.datum}${t+2})/3;0))`])),u[i.zahlungsstatus]=Array.from({length:s},((e,t)=>[`=IF(VALUE(${g.bezahlt}${t+2})=0;"Offen";IF(VALUE(${g.bezahlt}${t+2})>=VALUE(${g.bruttoBetrag}${t+2});"Bezahlt";"Teilbezahlt"))`])),Object.entries(u).forEach((([e,t])=>{n.getRange(2,Number(e),s,1).setFormulas(t)}));const o=n.getRange(2,i.bezahlt,s,1),h=o.getValues().map((([e])=>[t.isEmpty(e)?0:e]));return o.setValues(h),l(n,a,s,i),"Eigenbelege"!==a?t.setConditionalFormattingForColumn(n,g.zahlungsstatus,[{value:"Offen",background:"#FFC7CE",fontColor:"#9C0006"},{value:"Teilbezahlt",background:"#FFEB9C",fontColor:"#9C6500"},{value:"Bezahlt",background:"#C6EFCE",fontColor:"#006100"}]):t.setConditionalFormattingForColumn(n,g.status,[{value:"Offen",background:"#FFC7CE",fontColor:"#9C0006"},{value:"Erstattet",background:"#FFEB9C",fontColor:"#9C6500"},{value:"Gebucht",background:"#C6EFCE",fontColor:"#006100"}]),n.autoResizeColumns(1,n.getLastColumn()),!0}catch(e){return console.error(`Fehler beim Aktualisieren von ${n.getName()}:`,e),!1}},l=(t,n,s,a)=>{"Einnahmen"===n?r.validateDropdown(t,2,a.kategorie,s,1,Object.keys(e.einnahmen.categories)):"Ausgaben"===n?r.validateDropdown(t,2,a.kategorie,s,1,Object.keys(e.ausgaben.categories)):"Eigenbelege"===n&&(r.validateDropdown(t,2,a.kategorie,s,1,e.eigenbelege.category),r.validateDropdown(t,2,a.status,s,1,e.eigenbelege.status)),r.validateDropdown(t,2,a.zahlungsart,s,1,e.common.paymentType)},g=n=>{try{const r=SpreadsheetApp.getActiveSpreadsheet(),s=n.getLastRow();if(s<3)return!0;const a=3,i=s-a+1,l=s-a-1,g=e.sheets.bankbewegungen.columns,h={};Object.entries(g).forEach((([e,n])=>{h[e]=t.getColumnLetter(n)})),l>0&&n.getRange(a,g.saldo,l,1).setFormulas(Array.from({length:l},((e,t)=>[`=${h.saldo}${a+t-1}+${h.betrag}${a+t}`])));const b=n.getRange(a,g.betrag,i,1).getValues().map((([e])=>{const t=parseFloat(e)||0;return[t>0?"Einnahme":t<0?"Ausgabe":""]}));return n.getRange(a,g.transaktionstyp,i,1).setValues(b),u(n,a,i,g),t.setConditionalFormattingForColumn(n,h.transaktionstyp,[{value:"Einnahme",background:"#C6EFCE",fontColor:"#006100"},{value:"Ausgabe",background:"#FFC7CE",fontColor:"#9C0006"}]),c(r,n,a,i,s,g,h),o(n,s,g,h),n.autoResizeColumns(1,n.getLastColumn()),!0}catch(e){return console.error("Fehler beim Aktualisieren des Bankbewegungen-Sheets:",e),!1}},u=(t,n,s,a)=>{r.validateDropdown(t,n,a.transaktionstyp,s,1,e.bank.type),r.validateDropdown(t,n,a.kategorie,s,1,e.bank.category);const i=new Set,l=new Set;Object.values(e.einnahmen.kontoMapping).forEach((e=>{e.soll&&i.add(e.soll),e.gegen&&l.add(e.gegen)})),Object.values(e.ausgaben.kontoMapping).forEach((e=>{e.soll&&i.add(e.soll),e.gegen&&l.add(e.gegen)})),r.validateDropdown(t,n,a.kontoSoll,s,1,Array.from(i)),r.validateDropdown(t,n,a.kontoHaben,s,1,Array.from(l))},o=(e,t,n,r)=>{const s=e.getRange(t,n.buchungstext).getDisplayValue().toString().trim().toLowerCase(),a=Utilities.formatDate(new Date,Session.getScriptTimeZone(),"dd.MM.yyyy");if("endsaldo"===s)e.getRange(t,n.datum).setValue(a),e.getRange(t,n.saldo).setFormula(`=${r.saldo}${t-1}`);else{const r=Array(e.getLastColumn()).fill("");r[n.datum-1]=a,r[n.buchungstext-1]="Endsaldo",r[n.saldo-1]=e.getRange(t,n.saldo).getValue(),e.appendRow(r)}},h=e=>{if(1===arguments.length&&"einnahmen"===e&&n.references.einnahmen)return n.references.einnahmen;if(1===arguments.length&&"ausgaben"===e&&n.references.ausgaben)return n.references.ausgaben;const r={};if(!e||!e.length)return r;for(let n=0;n<e.length;n++){const s=e[n][0];if(t.isEmpty(s))continue;let a=s.trim();const i=a.startsWith("G-");i&&(a=a.substring(2));const l=t.normalizeText(a);let g=0;t.isEmpty(e[n][3])||(g=t.parseCurrency(e[n][3]),g=Math.abs(g));let u=0;t.isEmpty(e[n][4])||(u=t.parseMwstRate(e[n][4]));let o=0;t.isEmpty(e[n][7])||(o=t.parseCurrency(e[n][7]),o=Math.abs(o));const h=g*(1+u/100);r[a]={ref:s.trim(),normalizedRef:l,row:n+2,betrag:g,mwstRate:u,brutto:h,bezahlt:o,offen:t.round(h-o,2),isGutschrift:i},l===a||r[l]||(r[l]=r[a])}return 1===arguments.length&&("einnahmen"===e?n.references.einnahmen=r:"ausgaben"===e&&(n.references.ausgaben=r)),r},c=(n,r,s,i,l,g,u)=>{const o=e.sheets.einnahmen.columns,c=e.sheets.ausgaben.columns,m=a("Einnahmen");let A=[],y={};if(m&&m.getLastRow()>1){const e=m.getLastRow()-1;A=m.getRange(2,o.rechnungsnummer,e,8).getDisplayValues(),y=h(A)}const E=a("Ausgaben");let z=[],v={};if(E&&E.getLastRow()>1){const e=E.getLastRow()-1;z=E.getRange(2,c.rechnungsnummer,e,8).getDisplayValues(),v=h(z)}const B=r.getRange(s,1,i,g.matchInfo).getDisplayValues(),F=[],V=[],R=[],C={};for(let n=0;n<B.length;n++){const r=n+s,a=B[n],i=a[g.buchungstext-1]?a[g.buchungstext-1].toString().trim().toLowerCase():"";if(r===l&&"endsaldo"===i){F.push([""]),V.push([""]),R.push([""]);continue}const u=a[g.transaktionstyp-1],h=a[g.referenz-1];let k="",w="",S="";const A=a[g.kategorie-1]||"";if(!t.isEmpty(h)){let e=!1;const n=Math.abs(t.parseCurrency(a[g.betrag-1]));if("Einnahme"===u){const t=b(h,y,n);if(t){e=!0,k=d(t,n,a,g,m,o);C[`einnahme#${t.row}`]={typ:"einnahme",row:t.row,bankDatum:a[g.datum-1],matchInfo:k,transTyp:u}}}else if("Ausgabe"===u){const t=b(h,v,n);if(t){e=!0,k=f(t,n,a,g,E,c);C[`ausgabe#${t.row}`]={typ:"ausgabe",row:t.row,bankDatum:a[g.datum-1],matchInfo:k,transTyp:u}}if(!e){const t=b(h,y);if(t){e=!0,k=p(t,n,a,g,m,o);C[`einnahme#${t.row}`]={typ:"einnahme",row:t.row,bankDatum:a[g.datum-1],matchInfo:k,transTyp:"Gutschrift"}}}}if(!e){const t=h.toString().toLowerCase();t.includes("gesellschaftskonto")?(e=!0,k="Einnahme"===u?"Gesellschaftskonto (Einnahme)":"Gesellschaftskonto (Ausgabe)"):t.includes("holding")&&(e=!0,k="Einnahme"===u?"Holding (Einnahme)":"Holding (Ausgabe)")}}if(A){let t=null;"Einnahme"===u?t=e.einnahmen.kontoMapping[A]:"Ausgabe"===u&&(t=e.ausgaben.kontoMapping[A]),t?(w=t.soll||"",S=t.gegen||""):(w="Manuell prüfen",S="Manuell prüfen")}F.push([k]),V.push([w]),R.push([S])}r.getRange(s,g.matchInfo,i,1).setValues(F),r.getRange(s,g.kontoSoll,i,1).setValues(V),r.getRange(s,g.kontoHaben,i,1).setValues(R),Utilities.sleep(500),k(r,s,F,g),w(r,u.matchInfo),Utilities.sleep(500),S(m,E,C)},b=(e,n,r=null)=>{if(!e||!n)return null;const s=t.normalizeText(e);if(n[e])return m(n[e],r);if(s&&n[s])return m(n[s],r);const a=Object.keys(n);for(const t of a)if(t.includes(e)||e.includes(t))return m(n[t],r);for(const e of a){const a=t.normalizeText(e);if(a.includes(s)||s.includes(a))return m(n[e],r)}return null},m=(e,n=null)=>{if(!e)return null;const r={...e};if(null===n)return r.matchType="Referenz-Match",r;const s=Math.abs(e.brutto),a=Math.abs(e.bezahlt),i=.02;return t.isApproximatelyEqual(n,s,i)||t.isApproximatelyEqual(a,s,i)&&a>0?(r.matchType="Vollständige Zahlung",r):n<s&&s-n>.1*s?(r.matchType="Teilzahlung",r):n>s&&t.isApproximatelyEqual(n,s,i)?(r.matchType="Vollständige Zahlung",r):(r.matchType="Unsichere Zahlung",r.betragsDifferenz=t.round(Math.abs(n-s),2),r)},d=(e,n,r,s,a,i)=>{let l="";if(e.matchType&&(l="Unsichere Zahlung"===e.matchType&&e.betragsDifferenz?` (${e.matchType}, Diff: ${e.betragsDifferenz}€)`:` (${e.matchType})`),("Vollständige Zahlung"===e.matchType||"Teilzahlung"===e.matchType)&&a){const n=r[s.datum-1];if(n){const r=e.row,s=a.getRange(r,i.zahlungsdatum),g=s.getValue();t.isEmpty(g)&&(s.setValue(n),l+=" ✓ Datum aktualisiert")}}return`Einnahme #${e.row}${l}`},f=(e,n,r,s,a,i)=>{let l="";if(e.matchType&&(l="Unsichere Zahlung"===e.matchType&&e.betragsDifferenz?` (${e.matchType}, Diff: ${e.betragsDifferenz}€)`:` (${e.matchType})`),("Vollständige Zahlung"===e.matchType||"Teilzahlung"===e.matchType)&&a){const n=r[s.datum-1];if(n){const r=e.row,s=a.getRange(r,i.zahlungsdatum),g=s.getValue();t.isEmpty(g)&&(s.setValue(n),l+=" ✓ Datum aktualisiert")}}return`Ausgabe #${e.row}${l}`},p=(e,n,r,s,a,i)=>{let l="";const g=Math.abs(e.brutto);if(l=t.isApproximatelyEqual(n,g,.01)?" (Vollständige Gutschrift)":n<g?" (Teilgutschrift)":" (Ungewöhnliche Gutschrift)",a){const n=r[s.datum-1];if(n){const r=e.row,s=a.getRange(r,i.zahlungsdatum),g=s.getValue();t.isEmpty(g)&&(s.setValue(n),l+=" ✓ Datum aktualisiert");const u=a.getRange(r,i.rechnungsnummer),o=u.getValue();o&&!o.toString().startsWith("G-")&&(u.setValue("G-"+o),l+=" ✓ Ref. markiert")}}return`Gutschrift zu Einnahme #${e.row}${l}`},k=(e,t,n,r)=>{const s={Einnahme:{rows:[],color:"#EAF1DD"},"Vollständige Zahlung (Einnahme)":{rows:[],color:"#C6EFCE"},"Teilzahlung (Einnahme)":{rows:[],color:"#FCE4D6"},Ausgabe:{rows:[],color:"#FFCCCC"},"Vollständige Zahlung (Ausgabe)":{rows:[],color:"#FFC7CE"},"Teilzahlung (Ausgabe)":{rows:[],color:"#FCE4D6"},Gutschrift:{rows:[],color:"#E6E0FF"},"Gesellschaftskonto/Holding":{rows:[],color:"#FFEB9C"}};n.forEach(((e,n)=>{const r=t+n,a=e&&e[0]?e[0].toString():"";a&&(a.includes("Einnahme")?a.includes("Vollständige Zahlung")?s["Vollständige Zahlung (Einnahme)"].rows.push(r):a.includes("Teilzahlung")?s["Teilzahlung (Einnahme)"].rows.push(r):s.Einnahme.rows.push(r):a.includes("Ausgabe")?a.includes("Vollständige Zahlung")?s["Vollständige Zahlung (Ausgabe)"].rows.push(r):a.includes("Teilzahlung")?s["Teilzahlung (Ausgabe)"].rows.push(r):s.Ausgabe.rows.push(r):a.includes("Gutschrift")?s.Gutschrift.rows.push(r):(a.includes("Gesellschaftskonto")||a.includes("Holding"))&&s["Gesellschaftskonto/Holding"].rows.push(r))})),Object.values(s).forEach((t=>{if(t.rows.length>0){const n=20;for(let s=0;s<t.rows.length;s+=n){t.rows.slice(s,s+n).forEach((n=>{try{e.getRange(n,1,1,r.matchInfo).setBackground(t.color)}catch(e){console.error(`Fehler beim Formatieren von Zeile ${n}:`,e)}})),s+n<t.rows.length&&Utilities.sleep(50)}}}))},w=(e,n)=>{t.setConditionalFormattingForColumn(e,n,[{value:"Einnahme",background:"#C6EFCE",fontColor:"#006100",pattern:"beginsWith"},{value:"Ausgabe",background:"#FFC7CE",fontColor:"#9C0006",pattern:"beginsWith"},{value:"Gutschrift",background:"#E6E0FF",fontColor:"#5229A3",pattern:"beginsWith"},{value:"Gesellschaftskonto",background:"#FFEB9C",fontColor:"#9C6500",pattern:"beginsWith"},{value:"Holding",background:"#FFEB9C",fontColor:"#9C6500",pattern:"beginsWith"},{value:"Vollständige Zahlung",background:"#C6EFCE",fontColor:"#006100",pattern:"contains"},{value:"Teilzahlung",background:"#FCE4D6",fontColor:"#974706",pattern:"contains"},{value:"Unsichere Zahlung",background:"#F8CBAD",fontColor:"#843C0C",pattern:"contains"},{value:"Vollständige Gutschrift",background:"#E6E0FF",fontColor:"#5229A3",pattern:"contains"},{value:"Teilgutschrift",background:"#E6E0FF",fontColor:"#5229A3",pattern:"contains"},{value:"Ungewöhnliche Gutschrift",background:"#FFD966",fontColor:"#7F6000",pattern:"contains"}])},S=(e,t,n)=>{e&&e.getLastRow()>1&&A(e,"Einnahmen",n),t&&t.getLastRow()>1&&A(t,"Ausgaben",n)},A=(n,r,s)=>{const a="Einnahmen"===r?e.sheets.einnahmen.columns:e.sheets.ausgaben.columns,i=n.getLastRow()-1,l=n.getRange(2,1,i,a.zahlungsdatum).getValues(),g=[],u=[],o=[],h=[],c=[],b=[],m=[];for(let e=0;e<l.length;e++){const i=e+2,d=t.parseCurrency(l[e][a.nettobetrag-1]),f=t.parseCurrency(l[e][a.bezahlt-1]),p=l[e][a.zahlungsdatum-1],k=l[e][a.rechnungsnummer-1],w=k&&k.toString().startsWith("G-"),S=`${r.toLowerCase().slice(0,-1)}#${i}`,A=void 0!==s[S],y=d*(1+t.parseMwstRate(l[e][a.mwstSatz-1])/100),z=Math.abs(f)>=.999*Math.abs(y),v=!z&&f>0;w?(c.push(i),A&&m.push({row:i,value:E(s[S])})):z?p?A?(g.push(i),m.push({row:i,value:E(s[S])})):u.push(i):h.push(i):v?A?(o.push(i),m.push({row:i,value:E(s[S])})):h.push(i):(b.push(i),n.getRange(i,a.bankAbgleich).getValue().toString().startsWith("✓ Bank:")&&m.push({row:i,value:""}))}if(y(n,g,"#C6EFCE"),y(n,u,"#EAF1DD"),y(n,o,"#FFC7AA"),y(n,h,"#FCE4D6"),y(n,c,"#E6E0FF"),y(n,b,null),""===n.getRange(1,a.bankAbgleich).getValue()&&n.getRange(1,a.bankAbgleich).setValue("Bank-Abgleich"),m.length>0){const e={};m.forEach((t=>{const{row:n,value:r}=t;e[r]||(e[r]=[]),e[r].push(n)})),Object.entries(e).forEach((([e,t])=>{for(let r=0;r<t.length;r+=20){t.slice(r,r+20).forEach((t=>{n.getRange(t,a.bankAbgleich).setValue(e)})),r+20<t.length&&Utilities.sleep(50)}}))}},y=(e,t,n)=>{if(!t||0===t.length)return;for(let r=0;r<t.length;r+=20){t.slice(r,r+20).forEach((t=>{try{const r=e.getRange(t,1,1,e.getLastColumn());n?r.setBackground(n):r.setBackground(null)}catch(e){console.error(`Fehler beim Formatieren von Zeile ${t}:`,e)}})),r+20<t.length&&Utilities.sleep(50)}},E=e=>{if(!e)return"";let t="✓ Bank: "+e.bankDatum;return e.additional&&e.additional.length>0&&(t+=" + "+e.additional.length+" weitere"),t};return{refreshActiveSheet:()=>{try{const e=SpreadsheetApp.getActiveSpreadsheet().getActiveSheet(),t=e.getName(),n=SpreadsheetApp.getUi();s(),["Einnahmen","Ausgaben","Eigenbelege"].includes(t)?(i(e),n.alert(`Das Blatt "${t}" wurde aktualisiert.`)):"Bankbewegungen"===t?(g(e),n.alert(`Das Blatt "${t}" wurde aktualisiert.`)):n.alert("Für dieses Blatt gibt es keine Refresh-Funktion.")}catch(e){console.error("Fehler beim Aktualisieren des aktiven Sheets:",e),SpreadsheetApp.getUi().alert("Ein Fehler ist beim Aktualisieren aufgetreten: "+e.toString())}},refreshAllSheets:()=>{try{SpreadsheetApp.getActiveSpreadsheet();s();const e=["Einnahmen","Ausgaben","Eigenbelege","Bankbewegungen"];for(const t of e){const e=a(t);e&&("Bankbewegungen"===t?g(e):i(e),Utilities.sleep(100))}}catch(e){console.error("Fehler beim Aktualisieren aller Sheets:",e)}}}})(),a=(()=>{const n={ustva:null,lastUpdated:null},s=()=>({steuerpflichtige_einnahmen:0,steuerfreie_inland_einnahmen:0,steuerfreie_ausland_einnahmen:0,steuerpflichtige_ausgaben:0,steuerfreie_inland_ausgaben:0,steuerfreie_ausland_ausgaben:0,eigenbelege_steuerpflichtig:0,eigenbelege_steuerfrei:0,nicht_abzugsfaehige_vst:0,ust_7:0,ust_19:0,vst_7:0,vst_19:0}),a=(n,r,s,a=!1)=>{try{const u=s?"einnahmen":a?"eigenbelege":"ausgaben",o=e.sheets[u].columns,h=t.parseDate(n[o.zahlungsdatum-1]);if(!h||h>new Date)return;const c=t.getMonthFromRow(n,u);if(!c||c<1||c>12)return;const b=t.parseCurrency(n[o.nettobetrag-1]),m=b-(t.parseCurrency(n[o.steuerbemessung-1])||0);if(t.isApproximatelyEqual(m,0))return;const d=t.parseMwstRate(n[o.mwstSatz-1]),f=Math.round(d),p=t.round(m*(d/100),2),k=n[o.kategorie-1]?.toString().trim()||"";s?i(r,c,m,p,f,k):a?l(r,c,m,p,f,k):g(r,c,m,p,f,k)}catch(e){console.error("Fehler bei der Verarbeitung einer UStVA-Zeile:",e)}},i=(t,n,r,s,a,i)=>{const l=(e.einnahmen.categories[i]??{}).taxType??"steuerpflichtig";"steuerfrei_inland"===l?t[n].steuerfreie_inland_einnahmen+=r:"steuerfrei_ausland"!==l&&a?(t[n].steuerpflichtige_einnahmen+=r,7!==a&&19!==a||(t[n][`ust_${a}`]+=s)):t[n].steuerfreie_ausland_einnahmen+=r},l=(n,r,s,a,i,l)=>{const g=e.eigenbelege.mapping[l]??{},u=g.taxType??"steuerpflichtig";if("steuerfrei"===u)n[r].eigenbelege_steuerfrei+=s;else if("eigenbeleg"===u&&"bewirtung"===g.besonderheit){if(n[r].eigenbelege_steuerpflichtig+=s,7===i||19===i){const e=t.round(.7*a,2),s=t.round(.3*a,2);n[r][`vst_${i}`]+=e,n[r].nicht_abzugsfaehige_vst+=s}}else n[r].eigenbelege_steuerpflichtig+=s,7!==i&&19!==i||(n[r][`vst_${i}`]+=a)},g=(t,n,r,s,a,i)=>{const l=(e.ausgaben.categories[i]??{}).taxType??"steuerpflichtig";"steuerfrei_inland"===l?t[n].steuerfreie_inland_ausgaben+=r:"steuerfrei_ausland"===l?t[n].steuerfreie_ausland_ausgaben+=r:(t[n].steuerpflichtige_ausgaben+=r,7!==a&&19!==a||(t[n][`vst_${a}`]+=s))},u=(e,n)=>{const r=t.round(n.ust_7+n.ust_19-(n.vst_7+n.vst_19-n.nicht_abzugsfaehige_vst),2),s=t.round(n.steuerpflichtige_einnahmen+n.steuerfreie_inland_einnahmen+n.steuerfreie_ausland_einnahmen-(n.steuerpflichtige_ausgaben+n.steuerfreie_inland_ausgaben+n.steuerfreie_ausland_ausgaben+n.eigenbelege_steuerpflichtig+n.eigenbelege_steuerfrei),2);return[e,n.steuerpflichtige_einnahmen,n.steuerfreie_inland_einnahmen,n.steuerfreie_ausland_einnahmen,n.steuerpflichtige_ausgaben,n.steuerfreie_inland_ausgaben,n.steuerfreie_ausland_ausgaben,n.eigenbelege_steuerpflichtig,n.eigenbelege_steuerfrei,n.nicht_abzugsfaehige_vst,n.ust_7,n.ust_19,n.vst_7,n.vst_19,r,s]},o=(e,t,n)=>{const r={steuerpflichtige_einnahmen:0,steuerfreie_inland_einnahmen:0,steuerfreie_ausland_einnahmen:0,steuerpflichtige_ausgaben:0,steuerfreie_inland_ausgaben:0,steuerfreie_ausland_ausgaben:0,eigenbelege_steuerpflichtig:0,eigenbelege_steuerfrei:0,nicht_abzugsfaehige_vst:0,ust_7:0,ust_19:0,vst_7:0,vst_19:0};for(let s=t;s<=n;s++)if(e[s])for(const t in r)r[t]+=e[s][t]||0;return r};return{calculateUStVA:()=>{try{const t=SpreadsheetApp.getActiveSpreadsheet(),s=SpreadsheetApp.getUi(),i=(()=>{const e=new Date;if(n.ustva&&n.lastUpdated&&e-n.lastUpdated<3e5)return n.ustva;try{const t=SpreadsheetApp.getActiveSpreadsheet(),s=t.getSheetByName("Einnahmen"),i=t.getSheetByName("Ausgaben"),l=t.getSheetByName("Eigenbelege");if(!s||!i)return console.error("Fehlende Blätter: 'Einnahmen' oder 'Ausgaben' nicht gefunden"),null;if(!r.validateAllSheets(s,i))return console.error("UStVA-Berechnung abgebrochen, da Fehler in den Daten gefunden wurden"),null;const g=s.getDataRange().getValues(),u=i.getDataRange().getValues(),o=l?l.getDataRange().getValues():[],h=Object.fromEntries(Array.from({length:12},((e,t)=>[t+1,{steuerpflichtige_einnahmen:0,steuerfreie_inland_einnahmen:0,steuerfreie_ausland_einnahmen:0,steuerpflichtige_ausgaben:0,steuerfreie_inland_ausgaben:0,steuerfreie_ausland_ausgaben:0,eigenbelege_steuerpflichtig:0,eigenbelege_steuerfrei:0,nicht_abzugsfaehige_vst:0,ust_7:0,ust_19:0,vst_7:0,vst_19:0}])));return g.slice(1).forEach((e=>a(e,h,!0))),u.slice(1).forEach((e=>a(e,h,!1))),o.length&&o.slice(1).forEach((e=>a(e,h,!1,!0))),n.ustva=h,n.lastUpdated=e,h}catch(e){return console.error("Fehler beim Sammeln der UStVA-Daten:",e),null}})();if(!i)return void s.alert("Die UStVA konnte nicht berechnet werden. Bitte prüfen Sie die Fehleranzeige.");const l=[["Zeitraum","Steuerpflichtige Einnahmen","Steuerfreie Inland-Einnahmen","Steuerfreie Ausland-Einnahmen","Steuerpflichtige Ausgaben","Steuerfreie Inland-Ausgaben","Steuerfreie Ausland-Ausgaben","Eigenbelege steuerpflichtig","Eigenbelege steuerfrei","Nicht abzugsfähige VSt (Bewirtung)","USt 7%","USt 19%","VSt 7%","VSt 19%","USt-Zahlung","Ergebnis"]];e.common.months.forEach(((e,t)=>{const n=t+1;if(l.push(u(e,i[n])),n%3==0){const e=n/3,t=n-2;l.push(u(`Quartal ${e}`,o(i,t,n)))}})),l.push(u("Gesamtjahr",o(i,1,12)));let g=t.getSheetByName("UStVA");g?g.clearContents():g=t.insertSheet("UStVA");g.getRange(1,1,l.length,l[0].length).setValues(l),g.getRange(1,1,1,l[0].length).setFontWeight("bold");for(let e=0;e<4;e++){const t=3*(e+1)+1+e;g.getRange(t,1,1,l[0].length).setBackground("#e6f2ff")}return g.getRange(l.length,1,1,l[0].length).setBackground("#d9e6f2").setFontWeight("bold"),g.getRange(2,2,l.length-1,15).setNumberFormat("#,##0.00 €"),g.autoResizeColumns(1,l[0].length),t.setActiveSheet(g),s.alert("UStVA wurde erfolgreich aktualisiert!"),!0}catch(e){return console.error("Fehler bei der UStVA-Berechnung:",e),SpreadsheetApp.getUi().alert("Fehler bei der UStVA-Berechnung: "+e.toString()),!1}},clearCache:()=>{n.ustva=null,n.lastUpdated=null},_internal:{createEmptyUStVA:s,processUStVARow:a,formatUStVARow:u,aggregateUStVA:o}}})(),i=(()=>{const n={bwaData:null,lastCalculated:null},r=()=>({umsatzerloese:0,provisionserloese:0,steuerfreieInlandEinnahmen:0,steuerfreieAuslandEinnahmen:0,sonstigeErtraege:0,vermietung:0,zuschuesse:0,waehrungsgewinne:0,anlagenabgaenge:0,gesamtErloese:0,wareneinsatz:0,fremdleistungen:0,rohHilfsBetriebsstoffe:0,gesamtWareneinsatz:0,bruttoLoehne:0,sozialeAbgaben:0,sonstigePersonalkosten:0,werbungMarketing:0,reisekosten:0,versicherungen:0,telefonInternet:0,buerokosten:0,fortbildungskosten:0,kfzKosten:0,sonstigeAufwendungen:0,gesamtBetriebsausgaben:0,abschreibungenMaschinen:0,abschreibungenBueromaterial:0,abschreibungenImmateriell:0,zinsenBank:0,zinsenGesellschafter:0,leasingkosten:0,gesamtAbschreibungenZinsen:0,eigenkapitalveraenderungen:0,gesellschafterdarlehen:0,ausschuettungen:0,gesamtBesonderePosten:0,steuerrueckstellungen:0,rueckstellungenSonstige:0,gesamtRueckstellungenTransfers:0,ebit:0,umsatzsteuer:0,vorsteuer:0,nichtAbzugsfaehigeVSt:0,koerperschaftsteuer:0,solidaritaetszuschlag:0,gewerbesteuer:0,gewerbesteuerRueckstellungen:0,sonstigeSteuerrueckstellungen:0,steuerlast:0,gewinnNachSteuern:0,eigenbelegeSteuerfrei:0,eigenbelegeSteuerpflichtig:0}),s=(n,r)=>{try{const s=e.sheets.einnahmen.columns,a=t.getMonthFromRow(n,"einnahmen");if(!a)return;const i=t.parseCurrency(n[s.nettobetrag-1]);if(0===i)return;const l=n[s.kategorie-1]?.toString().trim()||"";if(["Gewinnvortrag","Verlustvortrag","Gewinnvortrag/Verlustvortrag"].includes(l))return;switch(l){case"Sonstige betriebliche Erträge":return void(r[a].sonstigeErtraege+=i);case"Erträge aus Vermietung/Verpachtung":return void(r[a].vermietung+=i);case"Erträge aus Zuschüssen":return void(r[a].zuschuesse+=i);case"Erträge aus Währungsgewinnen":return void(r[a].waehrungsgewinne+=i);case"Erträge aus Anlagenabgängen":return void(r[a].anlagenabgaenge+=i)}const g=e.einnahmen.bwaMapping[l];if("umsatzerloese"===g||"provisionserloese"===g)return void(r[a][g]+=i);0===t.parseMwstRate(n[s.mwstSatz-1])?r[a].steuerfreieInlandEinnahmen+=i:r[a].umsatzerloese+=i}catch(e){console.error("Fehler bei der Verarbeitung einer Einnahme:",e)}},a=(n,r)=>{try{const s=e.sheets.ausgaben.columns,a=t.getMonthFromRow(n,"ausgaben");if(!a)return;const i=t.parseCurrency(n[s.nettobetrag-1]);if(0===i)return;const l=n[s.kategorie-1]?.toString().trim()||"";if(["Privatentnahme","Privateinlage","Holding Transfers","Gewinnvortrag","Verlustvortrag","Gewinnvortrag/Verlustvortrag"].includes(l))return;switch(l){case"Bruttolöhne & Gehälter":return void(r[a].bruttoLoehne+=i);case"Soziale Abgaben & Arbeitgeberanteile":return void(r[a].sozialeAbgaben+=i);case"Sonstige Personalkosten":return void(r[a].sonstigePersonalkosten+=i);case"Gewerbesteuerrückstellungen":return void(r[a].gewerbesteuerRueckstellungen+=i);case"Telefon & Internet":return void(r[a].telefonInternet+=i);case"Bürokosten":return void(r[a].buerokosten+=i);case"Fortbildungskosten":return void(r[a].fortbildungskosten+=i)}const g=e.ausgaben.bwaMapping[l];if(!g)return void(r[a].sonstigeAufwendungen+=i);switch(g){case"wareneinsatz":r[a].wareneinsatz+=i;break;case"fremdleistungen":r[a].fremdleistungen+=i;break;case"rohHilfsBetriebsstoffe":r[a].rohHilfsBetriebsstoffe+=i;break;case"werbungMarketing":r[a].werbungMarketing+=i;break;case"reisekosten":r[a].reisekosten+=i;break;case"versicherungen":r[a].versicherungen+=i;break;case"kfzKosten":r[a].kfzKosten+=i;break;case"abschreibungenMaschinen":r[a].abschreibungenMaschinen+=i;break;case"abschreibungenBueromaterial":r[a].abschreibungenBueromaterial+=i;break;case"abschreibungenImmateriell":r[a].abschreibungenImmateriell+=i;break;case"zinsenBank":r[a].zinsenBank+=i;break;case"zinsenGesellschafter":r[a].zinsenGesellschafter+=i;break;case"leasingkosten":r[a].leasingkosten+=i;break;case"koerperschaftsteuer":r[a].koerperschaftsteuer+=i;break;case"solidaritaetszuschlag":r[a].solidaritaetszuschlag+=i;break;case"gewerbesteuer":r[a].gewerbesteuer+=i;break;default:r[a].sonstigeAufwendungen+=i}}catch(e){console.error("Fehler bei der Verarbeitung einer Ausgabe:",e)}},i=(n,r)=>{try{const s=e.sheets.eigenbelege.columns,a=t.getMonthFromRow(n,"eigenbelege");if(!a)return;const i=t.parseCurrency(n[s.nettobetrag-1]);if(0===i)return;const l=n[s.kategorie-1]?.toString().trim()||"",g=e.eigenbelege.mapping[l]??{};"steuerfrei"===(g.taxType??"steuerpflichtig")?r[a].eigenbelegeSteuerfrei+=i:r[a].eigenbelegeSteuerpflichtig+=i}catch(e){console.error("Fehler bei der Verarbeitung eines Eigenbelegs:",e)}},l=()=>{try{const r=new Date;if(n.bwaData&&n.lastCalculated){if(r-n.lastCalculated<3e5)return n.bwaData}const l=SpreadsheetApp.getActiveSpreadsheet(),g=l.getSheetByName("Einnahmen"),u=l.getSheetByName("Ausgaben"),o=l.getSheetByName("Eigenbelege");if(!g||!u)return console.error("Fehlendes Blatt: 'Einnahmen' oder 'Ausgaben'"),null;const h=Object.fromEntries(Array.from({length:12},((e,t)=>[t+1,{umsatzerloese:0,provisionserloese:0,steuerfreieInlandEinnahmen:0,steuerfreieAuslandEinnahmen:0,sonstigeErtraege:0,vermietung:0,zuschuesse:0,waehrungsgewinne:0,anlagenabgaenge:0,gesamtErloese:0,wareneinsatz:0,fremdleistungen:0,rohHilfsBetriebsstoffe:0,gesamtWareneinsatz:0,bruttoLoehne:0,sozialeAbgaben:0,sonstigePersonalkosten:0,werbungMarketing:0,reisekosten:0,versicherungen:0,telefonInternet:0,buerokosten:0,fortbildungskosten:0,kfzKosten:0,sonstigeAufwendungen:0,gesamtBetriebsausgaben:0,abschreibungenMaschinen:0,abschreibungenBueromaterial:0,abschreibungenImmateriell:0,zinsenBank:0,zinsenGesellschafter:0,leasingkosten:0,gesamtAbschreibungenZinsen:0,eigenkapitalveraenderungen:0,gesellschafterdarlehen:0,ausschuettungen:0,gesamtBesonderePosten:0,steuerrueckstellungen:0,rueckstellungenSonstige:0,gesamtRueckstellungenTransfers:0,ebit:0,umsatzsteuer:0,vorsteuer:0,nichtAbzugsfaehigeVSt:0,koerperschaftsteuer:0,solidaritaetszuschlag:0,gewerbesteuer:0,gewerbesteuerRueckstellungen:0,sonstigeSteuerrueckstellungen:0,steuerlast:0,gewinnNachSteuern:0,eigenbelegeSteuerfrei:0,eigenbelegeSteuerpflichtig:0}])));return g.getDataRange().getValues().slice(1).forEach((e=>s(e,h))),u.getDataRange().getValues().slice(1).forEach((e=>a(e,h))),o&&o.getDataRange().getValues().slice(1).forEach((e=>i(e,h))),(n=>{for(let r=1;r<=12;r++){const s=n[r];s.gesamtErloese=t.round(s.umsatzerloese+s.provisionserloese+s.steuerfreieInlandEinnahmen+s.steuerfreieAuslandEinnahmen+s.sonstigeErtraege+s.vermietung+s.zuschuesse+s.waehrungsgewinne+s.anlagenabgaenge,2),s.gesamtWareneinsatz=t.round(s.wareneinsatz+s.fremdleistungen+s.rohHilfsBetriebsstoffe,2),s.gesamtBetriebsausgaben=t.round(s.bruttoLoehne+s.sozialeAbgaben+s.sonstigePersonalkosten+s.werbungMarketing+s.reisekosten+s.versicherungen+s.telefonInternet+s.buerokosten+s.fortbildungskosten+s.kfzKosten+s.sonstigeAufwendungen,2),s.gesamtAbschreibungenZinsen=t.round(s.abschreibungenMaschinen+s.abschreibungenBueromaterial+s.abschreibungenImmateriell+s.zinsenBank+s.zinsenGesellschafter+s.leasingkosten,2),s.gesamtBesonderePosten=t.round(s.eigenkapitalveraenderungen+s.gesellschafterdarlehen+s.ausschuettungen,2),s.gesamtRueckstellungenTransfers=t.round(s.steuerrueckstellungen+s.rueckstellungenSonstige,2),s.ebit=t.round(s.gesamtErloese-(s.gesamtWareneinsatz+s.gesamtBetriebsausgaben+s.gesamtAbschreibungenZinsen+s.gesamtBesonderePosten),2);const a=e.tax.isHolding?e.tax.holding:e.tax.operative,i=e.tax.isHolding?a.gewinnUebertragSteuerpflichtig/100:1;s.gewerbesteuer=t.round(s.ebit*(a.gewerbesteuer/1e4)*i,2),s.koerperschaftsteuer=t.round(s.ebit*(a.koerperschaftsteuer/100)*i,2),s.solidaritaetszuschlag=t.round(s.koerperschaftsteuer*(a.solidaritaetszuschlag/100),2),s.steuerlast=t.round(s.koerperschaftsteuer+s.solidaritaetszuschlag+s.gewerbesteuer,2),s.gewinnNachSteuern=t.round(s.ebit-s.steuerlast,2)}})(h),n.bwaData=h,n.lastCalculated=r,h}catch(e){return console.error("Fehler bei der Aggregation der BWA-Daten:",e),null}},g=(e,n)=>{const r=[];let s=0;for(let t=1;t<=12;t++){const a=e.get(n[t])||0;r.push(a),s+=a}const a=[0,0,0,0];for(let e=0;e<12;e++)a[Math.floor(e/3)]+=r[e];const i=r.map((e=>t.round(e,2))),l=a.map((e=>t.round(e,2))),g=t.round(s,2);return[e.label,...i.slice(0,3),l[0],...i.slice(3,6),l[1],...i.slice(6,9),l[2],...i.slice(9,12),l[3],g]},u=(e,t,n,r)=>{e.getRange(1,1,1,t).setFontWeight("bold").setBackground("#f3f3f3");let s=2;for(const t of n)e.getRange(s,1).setFontWeight("bold"),s+=t.count+1;e.getRange(2,2,r-1,t-1).setNumberFormat("#,##0.00 €");[11,15,26,33,36,38,39,46].forEach((n=>{n<=r&&e.getRange(n,1,1,t).setBackground("#e6f2ff")})),e.getRange(39,1,1,t).setFontWeight("bold"),e.getRange(46,1,1,t).setFontWeight("bold"),e.autoResizeColumns(1,t)};return{calculateBWA:()=>{try{const t=SpreadsheetApp.getActiveSpreadsheet(),n=l();if(!n)return void SpreadsheetApp.getUi().alert("Fehler: BWA-Daten konnten nicht generiert werden.");const r=[{label:"Erlöse aus Lieferungen und Leistungen",get:e=>e.umsatzerloese||0},{label:"Provisionserlöse",get:e=>e.provisionserloese||0},{label:"Steuerfreie Inland-Einnahmen",get:e=>e.steuerfreieInlandEinnahmen||0},{label:"Steuerfreie Ausland-Einnahmen",get:e=>e.steuerfreieAuslandEinnahmen||0},{label:"Sonstige betriebliche Erträge",get:e=>e.sonstigeErtraege||0},{label:"Erträge aus Vermietung/Verpachtung",get:e=>e.vermietung||0},{label:"Erträge aus Zuschüssen",get:e=>e.zuschuesse||0},{label:"Erträge aus Währungsgewinnen",get:e=>e.waehrungsgewinne||0},{label:"Erträge aus Anlagenabgängen",get:e=>e.anlagenabgaenge||0},{label:"Betriebserlöse",get:e=>e.gesamtErloese||0},{label:"Wareneinsatz",get:e=>e.wareneinsatz||0},{label:"Bezogene Leistungen",get:e=>e.fremdleistungen||0},{label:"Roh-, Hilfs- & Betriebsstoffe",get:e=>e.rohHilfsBetriebsstoffe||0},{label:"Gesamtkosten Material & Fremdleistungen",get:e=>e.gesamtWareneinsatz||0},{label:"Bruttolöhne & Gehälter",get:e=>e.bruttoLoehne||0},{label:"Soziale Abgaben & Arbeitgeberanteile",get:e=>e.sozialeAbgaben||0},{label:"Sonstige Personalkosten",get:e=>e.sonstigePersonalkosten||0},{label:"Werbung & Marketing",get:e=>e.werbungMarketing||0},{label:"Reisekosten",get:e=>e.reisekosten||0},{label:"Versicherungen",get:e=>e.versicherungen||0},{label:"Telefon & Internet",get:e=>e.telefonInternet||0},{label:"Bürokosten",get:e=>e.buerokosten||0},{label:"Fortbildungskosten",get:e=>e.fortbildungskosten||0},{label:"Kfz-Kosten",get:e=>e.kfzKosten||0},{label:"Sonstige betriebliche Aufwendungen",get:e=>e.sonstigeAufwendungen||0},{label:"Abschreibungen Maschinen",get:e=>e.abschreibungenMaschinen||0},{label:"Abschreibungen Büroausstattung",get:e=>e.abschreibungenBueromaterial||0},{label:"Abschreibungen immaterielle Wirtschaftsgüter",get:e=>e.abschreibungenImmateriell||0},{label:"Zinsen auf Bankdarlehen",get:e=>e.zinsenBank||0},{label:"Zinsen auf Gesellschafterdarlehen",get:e=>e.zinsenGesellschafter||0},{label:"Leasingkosten",get:e=>e.leasingkosten||0},{label:"Gesamt Abschreibungen & Zinsen",get:e=>e.gesamtAbschreibungenZinsen||0},{label:"Eigenkapitalveränderungen",get:e=>e.eigenkapitalveraenderungen||0},{label:"Gesellschafterdarlehen",get:e=>e.gesellschafterdarlehen||0},{label:"Ausschüttungen an Gesellschafter",get:e=>e.ausschuettungen||0},{label:"Steuerrückstellungen",get:e=>e.steuerrueckstellungen||0},{label:"Rückstellungen sonstige",get:e=>e.rueckstellungenSonstige||0},{label:"Betriebsergebnis vor Steuern (EBIT)",get:e=>e.ebit||0},{label:"Umsatzsteuer (abzuführen)",get:e=>e.umsatzsteuer||0},{label:"Vorsteuer",get:e=>e.vorsteuer||0},{label:"Nicht abzugsfähige VSt (Bewirtung)",get:e=>e.nichtAbzugsfaehigeVSt||0},{label:"Körperschaftsteuer",get:e=>e.koerperschaftsteuer||0},{label:"Solidaritätszuschlag",get:e=>e.solidaritaetszuschlag||0},{label:"Gewerbesteuer",get:e=>e.gewerbesteuer||0},{label:"Gesamtsteueraufwand",get:e=>e.steuerlast||0},{label:"Jahresüberschuss/-fehlbetrag",get:e=>e.gewinnNachSteuern||0}],s=(()=>{const t=["Kategorie"];for(let n=0;n<4;n++){for(let r=3*n;r<3*n+3;r++)t.push(`${e.common.months[r]} (€)`);t.push(`Q${n+1} (€)`)}return t.push("Jahr (€)"),t})(),a=[s],i=[{titel:"Betriebserlöse (Einnahmen)",count:10},{titel:"Materialaufwand & Wareneinsatz",count:4},{titel:"Betriebsausgaben (Sachkosten)",count:11},{titel:"Abschreibungen & Zinsen",count:7},{titel:"Besondere Posten",count:3},{titel:"Rückstellungen",count:2},{titel:"Betriebsergebnis vor Steuern (EBIT)",count:1},{titel:"Steuern & Vorsteuer",count:7},{titel:"Jahresüberschuss/-fehlbetrag",count:1}];let o=0;for(let e=0;e<i.length;e++){const t=i[e];a.push([`${e+1}. ${t.titel}`,...Array(s.length-1).fill("")]);for(let e=0;e<t.count;e++)a.push(g(r[o++],n));e<i.length-1&&a.push(Array(s.length).fill(""))}let h=t.getSheetByName("BWA");h?h.clearContents():h=t.insertSheet("BWA");return h.getRange(1,1,a.length,a[0].length).setValues(a),u(h,s.length,i,a.length),SpreadsheetApp.getUi().alert("BWA wurde aktualisiert!"),t.setActiveSheet(h),!0}catch(e){return console.error("Fehler bei der BWA-Berechnung:",e),SpreadsheetApp.getUi().alert("Fehler bei der BWA-Berechnung: "+e.toString()),!1}},clearCache:()=>{n.bwaData=null,n.lastCalculated=null},_internal:{createEmptyBWA:r,processRevenue:s,processExpense:a,processEigen:i,aggregateBWAData:l}}})(),l=(()=>{const n={bilanzData:null,lastCalculated:null},r=()=>({aktiva:{sachanlagen:0,immaterielleVermoegen:0,finanzanlagen:0,summeAnlagevermoegen:0,bankguthaben:0,kasse:0,forderungenLuL:0,vorraete:0,summeUmlaufvermoegen:0,rechnungsabgrenzung:0,summeAktiva:0},passiva:{stammkapital:0,kapitalruecklagen:0,gewinnvortrag:0,verlustvortrag:0,jahresueberschuss:0,summeEigenkapital:0,bankdarlehen:0,gesellschafterdarlehen:0,verbindlichkeitenLuL:0,steuerrueckstellungen:0,summeVerbindlichkeiten:0,rechnungsabgrenzung:0,summePassiva:0}}),s=()=>{try{const r=new Date;if(n.bilanzData&&n.lastCalculated){if(r-n.lastCalculated<3e5)return n.bilanzData}const s=SpreadsheetApp.getActiveSpreadsheet(),g={aktiva:{sachanlagen:0,immaterielleVermoegen:0,finanzanlagen:0,summeAnlagevermoegen:0,bankguthaben:0,kasse:0,forderungenLuL:0,vorraete:0,summeUmlaufvermoegen:0,rechnungsabgrenzung:0,summeAktiva:0},passiva:{stammkapital:0,kapitalruecklagen:0,gewinnvortrag:0,verlustvortrag:0,jahresueberschuss:0,summeEigenkapital:0,bankdarlehen:0,gesellschafterdarlehen:0,verbindlichkeitenLuL:0,steuerrueckstellungen:0,summeVerbindlichkeiten:0,rechnungsabgrenzung:0,summePassiva:0}},u=e.sheets.bankbewegungen.columns,o=e.sheets.ausgaben.columns,h=e.sheets.gesellschafterkonto.columns,c=s.getSheetByName("Bankbewegungen");if(c){const e=c.getLastRow();if(e>=1){"endsaldo"===c.getRange(e,u.buchungstext).getValue().toString().toLowerCase()&&(g.aktiva.bankguthaben=t.parseCurrency(c.getRange(e,u.saldo).getValue()))}}const b=s.getSheetByName("BWA");if(b){const e=b.getDataRange().getValues();for(let n=e.length-1;n>=0;n--){const r=e[n];if(r[0].toString().toLowerCase().includes("jahresüberschuss")){g.passiva.jahresueberschuss=t.parseCurrency(r[r.length-1]);break}}}return g.passiva.stammkapital=e.tax.stammkapital||25e3,g.passiva.gesellschafterdarlehen=a(s,h),g.passiva.steuerrueckstellungen=i(s,o),l(g),n.bilanzData=g,n.lastCalculated=r,g}catch(e){return console.error("Fehler bei der Sammlung der Bilanzdaten:",e),null}},a=(e,n)=>{let r=0;const s=e.getSheetByName("Gesellschafterkonto");if(s){const e=s.getDataRange().getValues();for(let s=1;s<e.length;s++){const a=e[s];a[n.kategorie-1]&&"gesellschafterdarlehen"===a[n.kategorie-1].toString().toLowerCase()&&(r+=t.parseCurrency(a[n.betrag-1]||0))}}return r},i=(e,n)=>{let r=0;const s=e.getSheetByName("Ausgaben");if(s){const e=s.getDataRange().getValues(),a=["Gewerbesteuerrückstellungen","Körperschaftsteuer","Solidaritätszuschlag","Sonstige Steuerrückstellungen"];for(let s=1;s<e.length;s++){const i=e[s],l=i[n.kategorie-1]?.toString().trim()||"";a.includes(l)&&(r+=t.parseCurrency(i[n.nettobetrag-1]||0))}}return r},l=e=>{const{aktiva:n,passiva:r}=e;n.summeAnlagevermoegen=t.round(n.sachanlagen+n.immaterielleVermoegen+n.finanzanlagen,2),n.summeUmlaufvermoegen=t.round(n.bankguthaben+n.kasse+n.forderungenLuL+n.vorraete,2),n.summeAktiva=t.round(n.summeAnlagevermoegen+n.summeUmlaufvermoegen+n.rechnungsabgrenzung,2),r.summeEigenkapital=t.round(r.stammkapital+r.kapitalruecklagen+r.gewinnvortrag-r.verlustvortrag+r.jahresueberschuss,2),r.summeVerbindlichkeiten=t.round(r.bankdarlehen+r.gesellschafterdarlehen+r.verbindlichkeitenLuL+r.steuerrueckstellungen,2),r.summePassiva=t.round(r.summeEigenkapital+r.summeVerbindlichkeiten+r.rechnungsabgrenzung,2)},g=(e,n=!1)=>t.isApproximatelyEqual(e,0)&&n?"":e;return{calculateBilanz:()=>{try{const n=SpreadsheetApp.getActiveSpreadsheet(),r=SpreadsheetApp.getUi(),a=s();if(!a)return r.alert("Fehler: Bilanzdaten konnten nicht gesammelt werden."),!1;const i=(t=>{const{aktiva:n}=t;return[[`Bilanz ${e.tax.year||(new Date).getFullYear()} - Aktiva (Vermögenswerte)`,""],["",""],["1. Anlagevermögen",""],["1.1 Sachanlagen",g(n.sachanlagen)],["1.2 Immaterielle Vermögensgegenstände",g(n.immaterielleVermoegen)],["1.3 Finanzanlagen",g(n.finanzanlagen)],["Summe Anlagevermögen","=SUM(B4:B6)"],["",""],["2. Umlaufvermögen",""],["2.1 Bankguthaben",g(n.bankguthaben)],["2.2 Kasse",g(n.kasse)],["2.3 Forderungen aus Lieferungen und Leistungen",g(n.forderungenLuL)],["2.4 Vorräte",g(n.vorraete)],["Summe Umlaufvermögen","=SUM(B10:B13)"],["",""],["3. Rechnungsabgrenzungsposten",g(n.rechnungsabgrenzung)],["",""],["Summe Aktiva","=B7+B14+B16"]]})(a),l=(t=>{const{passiva:n}=t;return[[`Bilanz ${e.tax.year||(new Date).getFullYear()} - Passiva (Kapital und Schulden)`,""],["",""],["1. Eigenkapital",""],["1.1 Gezeichnetes Kapital (Stammkapital)",g(n.stammkapital)],["1.2 Kapitalrücklage",g(n.kapitalruecklagen)],["1.3 Gewinnvortrag",g(n.gewinnvortrag)],["1.4 Verlustvortrag (negativ)",g(n.verlustvortrag)],["1.5 Jahresüberschuss/Jahresfehlbetrag",g(n.jahresueberschuss)],["Summe Eigenkapital","=SUM(F4:F8)"],["",""],["2. Verbindlichkeiten",""],["2.1 Verbindlichkeiten gegenüber Kreditinstituten",g(n.bankdarlehen)],["2.2 Verbindlichkeiten gegenüber Gesellschaftern",g(n.gesellschafterdarlehen)],["2.3 Verbindlichkeiten aus Lieferungen und Leistungen",g(n.verbindlichkeitenLuL)],["2.4 Steuerrückstellungen",g(n.steuerrueckstellungen)],["Summe Verbindlichkeiten","=SUM(F12:F15)"],["",""],["3. Rechnungsabgrenzungsposten",g(n.rechnungsabgrenzung)],["",""],["Summe Passiva","=F9+F16+F18"]]})(a),u=a.aktiva.summeAktiva,o=a.passiva.summePassiva,h=Math.abs(u-o);h>.01&&r.alert("Bilanz ist nicht ausgeglichen",`Die Bilanzsummen von Aktiva (${t.formatCurrency(u)}) und Passiva (${t.formatCurrency(o)}) stimmen nicht überein. Differenz: ${t.formatCurrency(h)}. Bitte überprüfen Sie Ihre Buchhaltungsdaten.`,r.ButtonSet.OK);let c=n.getSheetByName("Bilanz");return c?c.clearContents():c=n.insertSheet("Bilanz"),c.getRange(1,1,i.length,2).setValues(i),c.getRange(1,5,l.length,2).setValues(l),((e,t,n)=>{e.getRange("A1").setFontWeight("bold").setFontSize(12),e.getRange("E1").setFontWeight("bold").setFontSize(12),[7,14,18].forEach((n=>{n<=t&&(e.getRange(n,1,1,2).setFontWeight("bold"),18===n?e.getRange(n,1,1,2).setBackground("#e6f2ff"):e.getRange(n,1,1,2).setBackground("#f0f0f0"))})),[9,16,20].forEach((t=>{t<=n&&(e.getRange(t,5,1,2).setFontWeight("bold"),20===t?e.getRange(t,5,1,2).setBackground("#e6f2ff"):e.getRange(t,5,1,2).setBackground("#f0f0f0"))})),[3,9,16].forEach((n=>{n<=t&&e.getRange(n,1).setFontWeight("bold")})),[3,11,17].forEach((t=>{t<=n&&e.getRange(t,5).setFontWeight("bold")})),e.getRange("B4:B18").setNumberFormat("#,##0.00 €"),e.getRange("F4:F20").setNumberFormat("#,##0.00 €"),e.autoResizeColumns(1,6)})(c,i.length,l.length),r.alert("Die Bilanz wurde erfolgreich erstellt!"),!0}catch(e){return console.error("Fehler bei der Bilanzerstellung:",e),SpreadsheetApp.getUi().alert("Fehler bei der Bilanzerstellung: "+e.toString()),!1}},clearCache:()=>{n.bilanzData=null,n.lastCalculated=null},_internal:{createEmptyBilanz:r,aggregateBilanzData:s}}})(),g=(e,t)=>{try{s.refreshAllSheets(),e()}catch(e){SpreadsheetApp.getUi().alert(`${t}: ${e.message}`),console.error(`${t}:`,e)}};global.onOpen=()=>{SpreadsheetApp.getUi().createMenu("📂 Buchhaltung").addItem("📥 Dateien importieren","importDriveFiles").addItem("🔄 Aktuelles Blatt aktualisieren","refreshSheet").addItem("📊 UStVA berechnen","calculateUStVA").addItem("📈 BWA berechnen","calculateBWA").addItem("📝 Bilanz erstellen","calculateBilanz").addToUi()},global.onEdit=t=>{const{range:n}=t,r=n.getSheet(),s=r.getName().toLowerCase();if(!e.sheets[s]||!e.sheets[s].columns.zeitstempel)return;if(1===n.getRow())return;const a=e.sheets[s].columns.zeitstempel;if(n.getColumn()===a||n.getNumColumns()>1&&n.getColumn()<=a&&n.getColumn()+n.getNumColumns()>a)return;const i=n.getNumRows(),l=[],g=new Date;for(let e=0;e<i;e++){const t=n.getRow()+e,s=r.getRange(1,1,1,r.getLastColumn()).getValues()[0].length;r.getRange(t,1,1,s).getValues()[0].every((e=>""===e))||l.push([g])}l.length>0&&r.getRange(n.getRow(),a,l.length,1).setValues(l)},global.setupTrigger=()=>{const e=ScriptApp.getProjectTriggers();e.some((e=>"onOpen"===e.getHandlerFunction()))||ScriptApp.newTrigger("onOpen").forSpreadsheet(SpreadsheetApp.getActiveSpreadsheet()).onOpen().create(),e.some((e=>"onEdit"===e.getHandlerFunction()))||ScriptApp.newTrigger("onEdit").forSpreadsheet(SpreadsheetApp.getActiveSpreadsheet()).onEdit().create()},global.refreshSheet=()=>s.refreshActiveSheet(),global.calculateUStVA=()=>{g(a.calculateUStVA,"Fehler bei der UStVA-Berechnung")},global.calculateBWA=()=>{g(i.calculateBWA,"Fehler bei der BWA-Berechnung")},global.calculateBilanz=()=>{g(l.calculateBilanz,"Fehler bei der Bilanzerstellung")},global.importDriveFiles=()=>{try{n.importDriveFiles(),s.refreshAllSheets()}catch(e){SpreadsheetApp.getUi().alert("Fehler beim Dateiimport: "+e.message),console.error("Import-Fehler:",e)}}}));
